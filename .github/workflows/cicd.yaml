name: stac-fastapi-pgstac
on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

jobs:
  test:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: [ '3.8', '3.9', '3.10']
    timeout-minutes: 10

    services:
      db_service:
        image: bitner/pgstac:0.2.7
        env:
          POSTGRES_USER: username
          POSTGRES_PASSWORD: password
          POSTGRES_DB: postgis
          POSTGRES_HOST: localhost
          POSTGRES_PORT: 5432
          ALLOW_IP_RANGE: 0.0.0.0/0
        # Set health checks to wait until postgres has started
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 10s
          --health-retries 10
        ports:
          # Maps tcp port 5432 on service container to the host
          - 5432:5432

    steps:
      - name: Check out repository code
        uses: actions/checkout@v3

      # Setup Python (faster than using Python container)
      - name: Setup Python
        uses: actions/setup-python@v3
        with:
          python-version: ${{ matrix.python-version }}

      - name: Lint code
        uses: pre-commit/action@v2.0.0

      - name: Install pipenv
        run: |
          python -m pip install --upgrade pipenv wheel

      - name: Install pgstac stac-fastapi
        run: |
          pip install ./stac_fastapi/pgstac[dev,server]

      - name: Run test suite
        run: |
          cd stac_fastapi/pgstac && pipenv run pytest -svvv
        env:
          ENVIRONMENT: testing
          POSTGRES_USER: username
          POSTGRES_PASS: password
          POSTGRES_DBNAME: postgis
          POSTGRES_HOST_READER: localhost
          POSTGRES_HOST_WRITER: localhost
          POSTGRES_PORT: 5432
  test-docs:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Test generating docs
        run: make docs